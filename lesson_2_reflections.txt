When you initialize a repository, a new directory called .git (which is
normally invisible to file explorers and can only be seen through the
command line using ls -a) is created, which keeps track of metadata
associated with all the files in that directory that records their
versioning history.

This allows you to begin working with the files in the directory within
Git and employing the version control workflows that it makes possible.


***

A staging area is different from both a working directory and a
repository. It represents an intermediate stage between the two. When you
make a new repository, before you commit some files from a working
directory into it, you first bring the files individually into the
staging area.

This allows you fine control over exactly which files are going to go
into a given commit. Without the staging area, making a commit would roll
up all the files in your working directory into the commit, which is very
often not the ideal situation, as commits should be more or less
correlated with specific logical changes.


***

You can use the staging area to make sure you have one commit per
logical change because using "git add" to move changes into the staging
area introduces an additional step that provides an opportunity to
reflect on whether your changes are commit-appropriate. 

You can use "git diff --staged" to compare what is in the staging area to
what's in your latest commit to make completely sure that what you're
about to commit makes sense. 

Similarly, you can use "git diff" w/o arguments to compare changes
you've made in your working directory w/ what is in the staging area
(which will be whatever you committed last time), for the same kind of
reason.